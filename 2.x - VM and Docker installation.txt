Мой конспект
------------

1) Виртуальный сервер Ubuntu 24.04.2
 ISO - C:\Roaming\VMs source images
 Память - 8 Гб
 Процессор - 4 ядра
 Диск - 20 Гб динамический, в C:\Users\deafs\VirtualBox VMs

 При установке включить OpenSSH server

 Имя сервера: server-demo
 Пользователь: user123
 Пароль: 123


Если вы работаете с виртуальной машиной (например, Ubuntu Server в VirtualBox, проброс портов 22 (хост-машинв) -> 2222 (виртуальная машина), откройте PowerShell и испольуйте команду
	scp -P2222 user@127.0.0.1:/home/user/log.txt .
Эта команда скопирует файл log.txt из домашнего каталога указанного пользователя в текущую папку хост-машины (по умолчанию для PowerShell это C:\Users\<username>)


2) Устанавливаем Docker
https://docs.docker.com/engine/install/ubuntu/

for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done

# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update


sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

sudo docker run hello-world



3) Чтобы запускать Docker без root, нужно добавить текущего или любого пользователя в группу docker, которая сразу после установки пуста
https://docs.docker.com/engine/install/linux-postinstall/

	sudo groupadd docker
	sudo usermod -aG docker $USER
Выйдите и перезайдите в систему. Если вы работаете в виртуальной машине, ее потребуется перезапустить.

Теперь должно выполниться без sudo:
	docker run hello-world


==================================================================================

Список всех man-страниц по камандам (в алфавитном порядке)
https://man7.org/linux/man-pages/dir_all_alphabetic.html

==================================================================================
==================================================================================
==================================================================================


КОНСПЕКТ ОТ PURPLE SCHOOL
-------------------------

Генерация ssh ключа

1. Введение:

    Основная цель лекции - научить генерировать SSH ключи.
    Объясняется необходимость этих ключей для беспарольного доступа к сервисам.
    Указывается, что курс обновляется, и будут добавляться лекции с обновленной информацией.

2. Особенности Windows:

    На Windows есть два способа генерации: через клиент Git или OpenSSH.
    Рекомендуется использовать OpenSSH.
    Для активации OpenSSH на Windows необходимо:
        Открыть Apps and Features.
        Перейти в Optional Features (Опциональные фичи).
        Найти и добавить OpenSSH Client.

3. Общие шаги для всех операционных систем:

    У Mac и Linux OpenSSH уже предустановлен.
    Для генерации ключей используется команда в терминале: ssh-keygen.
    После запуска команды необходимо следовать инструкциям, при желании указать имя файла для ключей.
    При создании ключа можно задать пароль для дополнительной защиты или оставить поле пустым для беспарольного доступа.
    В результате создаются два файла: приватный ключ (например, id_rsa) и публичный ключ (например, id_rsa.pub).
    Приватный ключ остается на вашей машине для аутентификации, публичный ключ нужен для добавления на сервера или в сервисы.


Установка Ubuntu

Создание виртуальной машины:

    Запуск VirtualBox:
        Создаём новую виртуальную машину.
        Указываем тип OS (Linux) и версию (Ubuntu 64-бит).
        Выбираем папку для установки (по умолчанию).
    Назначаем ресурсы:
        Оперативная память: рекомендуется минимум 2 ГБ.
        Жёсткий диск: создаём новый VDI диск с динамическим выделением (рекомендуемый размер 20 ГБ).
    Настройка загрузочного образа:
        В настройках VM добавляем образ Ubuntu 20.04 LTS в виртуальный привод.

Установка ОС:

    Запуск установки:
        Запускаем VM, проходим стандартные этапы установки Ubuntu (язык, раскладка, имя пользователя, пароль).
        Обязательно устанавливаем OpenSSH сервер для удалённого доступа.
    Настройка сети:
        Настроим проброс портов в VirtualBox (127.0.0.1:2222 -> 22), чтобы использовать SSH.

Первичная настройка сервера:

    Доступ по SSH:
        Подключаемся к серверу через SSH, используя терминал и указанные ранее логин и порт.
    Настройка авторизации по ключам:
        Генерируем публичный ключ на хосте и добавляем его в ~/.ssh/authorized_keys на сервере для обеспечения доступа без пароля.
    Установка Docker:
        На данном этапе сервер готов к установке Docker.

Базовые команды linux

Основные команды:

    Навигация и информация:
        pwd – узнать текущий путь.
        ls – просмотр содержимого директории.
        ls -l – детальный просмотр с правами и владельцем.
        ls -la – просмотр включая скрытые файлы.
        cd <путь> – перейти в директорию.
    Работа с файлами и директориями:
        mkdir <имя> – создать директорию.
        rm <файл> – удалить файл.
        rm -r <директория> – удалить директорию рекурсивно.
        cp <исходный> <целевой> – скопировать файл или директорию.
        mv <исходный> <целевой> – переместить файл или директорию.
    Просмотр содержимого файлов:
        cat <файл> – показать содержимое файла.
        tail <файл> – показать последние строки файла.
        head <файл> – показать первые строки файла.
        less <файл> – просмотр содержимого больших файлов.
    Пипы (конвейер) и поиск:
        | – использование пайплайна для передачи вывода одной команды в другую.
        grep <шаблон> – поиск строк по шаблону.
        find <путь> -name <имя> – поиск файлов по имени.
    Работа с редакторами и различиями в файлах:
        vim <файл>/nano <файл> – редактирование файлов в терминале.
        diff <файл1> <файл2> – сравнение файлов.
    Дополнительные команды:
        echo <текст> – вывод текста в терминал.
        > – перенаправление вывода в файл.
        df – проверка использования дискового пространства.
        sudo <команда> – выполнение команды от имени администратора.
    Работа с Git:
        git clone <репозиторий> – клонирование репозитория.
        git branch – просмотр и смена веток.
        git pull – обновление локальной версии.
        git push – отправка изменений в удалённый репозиторий.


Настройка Docker

Обновление пакетов

    Выполните команду apt-get update для обновления списка пакетов.

Установка необходимых пакетов

    Установите следующие пакеты для подготовки системы к установке Docker:
        transport-https
        сертификаты
        curl
        lsb-release
        gnupg

Добавление Docker GPG ключа

    Добавьте официальный GPG ключ Docker командой curl -fsSLhttps://download.docker.com/linux/ubuntu/gpg| sudo apt-key add -.

Добавление Docker репозитория

    Добавьте Docker репозиторий в систему:
        Используйте sudo add-apt-repository "deb [arch=amd64]https://download.docker.com/linux/ubuntu$(lsb_release -cs) stable".
        Повторно выполните apt-get update.

Установка Docker

    Установите Docker, используя sudo apt-get install docker-ce docker-ce-cli containerd.io.

Добавление пользователя в группу Docker

    Чтобы использовать Docker без привилегий суперпользователя, добавьте своего пользователя в группу Docker:
        sudo usermod -aG docker ваш_пользователь.
        Вам потребуется выйти из системы и войти снова, чтобы изменения вступили в силу.

Проверка установки

    После перелогинивания проверьте работоспособность Docker командой docker ps.
    Запустите тестовый контейнер docker run hello-world чтобы убедиться, что Docker работает корректно.

